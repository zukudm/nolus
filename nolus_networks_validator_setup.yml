- name: Run nolus-networks validator setup
  vars_files: 
    - vars/vars.yml
    
  hosts: "{{ host }}"
  gather_facts: no
  become: yes

  pre_tasks:
    - pause:
        prompt: "Input your recovery mnemonic"
        echo: no
      when: ask_recovery != "no" or recovery is not defined
      register: recovery_mnemonic


  
  tasks:
 
    - name: Get version
      set_fact: version="{{ lookup('file', nolus_git_name +'/'+ network +'/version.md') }}"

    - name: Set image name
      set_fact: image_name="nolus-image-{{version}}"

    - name: Set recovery mnemonic
      set_fact: recovery="{{ recovery_mnemonic.user_input }}"
      when: recovery_mnemonic.user_input is defined


    - name: Print user input 
      ansible.builtin.debug:
        var: recovery

   
    # - name: Run key generation inside container
    #   community.docker.docker_container_exec: 
    #     container: "{{ container_name }}-{{ version }}"
    #     command: sh -c " printf '%s\n%s\n' {{ password4key }} {{ password4key }} | nolusd keys add {{ keyname }}"
    #   register: out

        
    # - name: Print all details abot key
    #   ansible.builtin.debug:
    #     var: out.stdout

    # - name: Print recovery information about key (mnemonic)
    #   ansible.builtin.debug:
    #     var: out.stderr_lines

    - name: Get moniker name from config file inside container
      community.docker.docker_container_exec: 
        container: "{{ container_name }}-{{ version }}"
        command: sh -c "cat ~/.nolus/config/config.toml config.toml | grep moniker | awk '{print $3}' | awk '{print substr($0, 2, length($0) - 2)}'"
      register: moniker_out

    - name: Print moniker name
      ansible.builtin.debug:
        var: moniker_out.stdout 

    - name: Add curl and jq pkg into the container
      community.docker.docker_container_exec: 
        container: "{{ container_name }}-{{ version }}"
        command: sh -c "apk add curl; apk add jq"
          

    - name: Get sync status inside container
      community.docker.docker_container_exec: 
        container: "{{ container_name }}-{{ version }}"
        command: sh -c "curl http://localhost:26657/status | jq .result.sync_info.catching_up"
      register: sync_out

    - name: Print SYnc status
      ansible.builtin.debug:
        var: sync_out.stdout

    - name: Validate whether the node synced
      assert:
        that: 
          - sync_out.stdout == 'true'
        fail_msg: "The node is not synced!!!! Please wait for a while"
      




        


      
